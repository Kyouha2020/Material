@use "sass:color"
@use "sass:map"
@use "../../design/color/light-theme" as *
@use "../../design/usability/accessibility" as *
@use "../../design/environment/elevation" as *
@use "../../design/interaction/states" as *
@use "../../design/layout/density" as *
@use "../../design/layout/spacing" as *
@use "../../design/shape/shape" as *
@use "../../design/typography/typography" as *
@use "../ripple/ripple" as *

@mixin button-container($container-color, $container-overlay, $elevation: 0, $elevation-scale: 2)
  @include ripple(rgba($container-overlay, $container-overlay--pressed))
  background-color: $container-color
  &.mtrl-button--choice
    background-color: color.mix($container-color, $container-overlay, 100% - $container-overlay--pressed)
  &.mtrl-button--two-tone
    background-color: color.mix($container-color, $container-overlay, 100% - $container-overlay--pressed)

    &.mtrl-button--contained
      background-color: color.mix($container-color, $container-overlay, (100% - $container-overlay--pressed) / 2)
  &:hover
    background-color: color.mix($container-color, $container-overlay, 100% - $container-overlay--hovered)
  &:focus
    background-color: color.mix($container-color, $container-overlay, 100% - $container-overlay--focused)
  &:active
    background-color: color.mix($container-color, $container-overlay, 100% - $container-overlay--pressed)
  @if $elevation != 0
    @include elevation($elevation)
    &:hover
      @include elevation($elevation + $elevation-scale)
    &:focus
      @include elevation($elevation + $elevation-scale * 2)
    &:active
      @include elevation($elevation + $elevation-scale * 3)
  &:disabled
    @include elevation(0)
    background-color: rgba(color.grayscale($container-color), $disabled-filled-container)


.mtrl-button
  @include typography(button)
  @include density(button)
  @include touch-target(button)
  @include shape(button)
  @include button-container($surface, $primary)
  @include color($primary, $text--high-emphasis)
  @include margin(1)
  @include padding(0, 2)
  min-width: 64px
  position: relative
  display: inline-flex
  align-items: center
  justify-content: center
  vertical-align: middle
  user-select: none
  white-space: nowrap
  border: none
  -webkit-tap-highlight-color: transparent
  transition: box-shadow 150ms

  &:not(:focus-visible)
    outline: none

  &:focus-visible
    overflow: hidden

  &:hover
    cursor: pointer

  &:disabled
    @include color($on-surface, $text--disabled)
    cursor: default
    pointer-events: none
    border-color: rgba($on-surface, $stroke)

  & > *
    position: relative


  &--outlined
    @include padding(0, 4)
    border: 1px solid rgba($on-surface, $stroke)
    @if tone($surface) == dark
      &:focus
        border-color: $primary

  &--contained
    @include button-container($primary, white, 2)
    @include color($on-primary, $text--high-emphasis)
    @include padding(0, 4)

    &.mtrl-button--two-tone
      @include color($primary, $text--high-emphasis)

  &--choice
    @include shape(choice-button)
    @include button-container($surface, $on-surface)
    @include color($on-surface, $text--high-emphasis)
    @include padding(0, 4)
    border-bottom: 2px solid $on-surface

    &--active
      @include button-container($surface, $primary)
      @include color($primary, $text--high-emphasis)
      border-color: $primary
      border-bottom: 2px solid

  &--rounded
    border-radius: map.get($component-height, button) / 2

  &--block
    width: 100%


  &__label
    display: inline-flex
    align-items: center
    justify-content: center

    &--sentence-case
      text-transform: none

  &__icon
    @include margin-horizontal(-1, 2)
    width: 18px
    height: 18px
    font-size: 18px
    fill: currentColor

  &__label + &__icon
    @include margin-horizontal(2, -1)
